SameCase変換モジュールの説明    2023年3月30日 有限会社サイトー企画 斉藤秀夫
                                              peh00775@nifty.com

■１．概要

SameCase変換モジュールは、大文字/小文字の区別について、３種類のパターンを見極めて、それと同じパターンで英単語を置換する用の変換モジュールです。

　例えば、C++言語のソースコードで、Cacheと書かないと行けない所を間違ってCashと書いてしまったとします。例えば

    int nCash;
    char* psz_cash;
    #define CASH_COUNT   100

　みたいな感じで「Cash」、「cash」、「CASH」の３種類使ってるとしたら、これら全部を一発の置換では置換できず、「Cash → Cashe」、「cash → cache」、「CASH → CACHE」の３回の置換をしないといけないです。

　これを１発で置換する用の変換モジュールになります。

■２．使い方（登録の仕方）

　この変換モジュールを使うには、まずは秀丸エディタに変換モジュールとして登録する必要があります。32bit版の秀丸エディタでは「SameCase.hmf」を登録し、64bit版では「SameCase.hmf64」を登録します。

　「その他 - 動作環境...」の「編集 - 変換」の所で「追加」ボタンを押して登録します。

　ちなみにこの変換モジュールは置換コマンドで使う専用で、「編集 - 置換」サブメニューから呼び出して使うと必ずエラーになります。（変換モジュール呼び出し時のパラメータが無いと動かないので）

■３．置換のやり方

　置換の時に変換モジュールを指定する方法を使います。置換したい先の単語は変換モジュールのパラメータとして指定します。

　例えば「cash」を「cache」に置換する例だと、

    検索:   (cash)
    置換:   \(1,SameCase,SameCase,cashe)
    大文字/小文字の区別 = OFF
    正規表現 = ON

　のように指定します。

　「Cash」でも「CASH」でも「cash」でも無い、例えば「cAsh」のように、先頭以外の場所に大文字/小文字の違う文字が混じってる場合は置換は実行されません。

　「cash」が単語じゃない場合、例えば「cashing」のような文字列の中身は置換したくない場合には、検索の時の「単語の検索」をONにするか、または正規表現パターンに、

    検索:   (\<cash\>)

　にするなどしてうまく単語にだけヒットするようにすればいいです。

■４．ソースコードその他

　Visual Studio 2022でビルドする用のソースコード一式も添付しています。

　ソースコードも変換モジュールも自由に使っていただいてかまいません。ソースコードの流用もOKです。
